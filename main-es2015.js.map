{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.interceptor.ts","./src/app/app.module.ts","./src/app/guards/auth.guard.ts","./src/app/models/response-error.ts","./src/app/services/auth.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<router-outlet></router-outlet>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'auth',\r\n    loadChildren: () => import('./layouts/auth/auth.module').then(m => m.AuthModule)\r\n  },\r\n  {\r\n    path: '',\r\n    loadChildren: () => import('./layouts/panel/panel.module').then(m => m.PanelModule),\r\n    canActivate: [AuthGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AppComponent implements OnInit {\r\n  public title = 'sofbox-dashboard-angular';\r\n\r\n  constructor(\r\n    private router: Router,\r\n  ) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.router.events.subscribe((evt) => {\r\n      if (!(evt instanceof NavigationEnd)) {\r\n        return;\r\n      }\r\n      window.scrollTo(0, 0);\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpInterceptor, HttpErrorResponse } from '@angular/common/http';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from './services/auth.service';\r\nimport { ResponseError } from './models/response-error';\r\n\r\n@Injectable()\r\nexport class AppInterceptor implements HttpInterceptor {\r\n  constructor(private router: Router, private authService: AuthService) {}\r\n\r\n  private handleAuthError(err: HttpErrorResponse) {\r\n    const res = new ResponseError(err.status, '');\r\n    if (err.status === 401 && this.router.url != '/auth/login') {\r\n      localStorage.clear();\r\n      this.router.navigateByUrl('/auth/login');\r\n      res.setMessage(err.error.message);\r\n    }\r\n    else if (err.status === 422) {\r\n      let message = '';\r\n      const errors = err.error.errors;\r\n      Object.keys(errors).forEach(k => message += errors[k] + '.\\n');\r\n      res.setMessage(message);\r\n    }\r\n    else if ('message' in err.error) {\r\n      res.setMessage(err.error.message);\r\n    }\r\n    return throwError(res);\r\n  }\r\n\r\n  public intercept(request: HttpRequest<any>, next: HttpHandler) {\r\n    const token = this.authService.getAuthToken();\r\n    if (token != null) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n    }\r\n    return next\r\n      .handle(request)\r\n      .pipe(catchError((err) => this.handleAuthError(err)));\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { PopoverModule } from 'ngx-bootstrap/popover';\r\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\r\nimport { AlertModule } from 'ngx-bootstrap/alert';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgScrollbarModule } from 'ngx-scrollbar';\r\nimport { SlickCarouselModule } from 'ngx-slick-carousel';\r\nimport { NgwWowModule } from 'ngx-wow';\r\nimport { AppInterceptor } from './app.interceptor';\r\nimport { SortablejsModule } from 'ngx-sortablejs';\r\nimport { NgxMaskModule } from 'ngx-mask';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    AlertModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    PopoverModule.forRoot(),\r\n    ProgressbarModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    ButtonsModule.forRoot(),\r\n    CarouselModule.forRoot(),\r\n    ProgressbarModule.forRoot(),\r\n    NgScrollbarModule,\r\n    SlickCarouselModule,\r\n    BrowserAnimationsModule,\r\n    NgwWowModule,\r\n    SortablejsModule.forRoot({ animation: 150 }),\r\n    NgxMaskModule.forRoot(),\r\n    NgSelectModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AppInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private route:  Router\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.authService.isLogged()) {\n        return true;\n    }\n    this.route.navigateByUrl('/auth/login');\n    return false;\n  }\n}\n","export class ResponseError {\r\n  private status: number;\r\n  private message: string;\r\n\r\n  constructor (status: number, message: string) {\r\n    this.status = status;\r\n    this.message = message;\r\n  }\r\n\r\n  public getMessage(): string {\r\n    return this.message;\r\n  }\r\n\r\n  public setMessage(message: string): void {\r\n    this.message = message;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Usuario } from 'src/app/models/usuario';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private userStorageKey: string = '_auth_user';\r\n  private tokenStorageKey: string = '_auth_token';\r\n  private apiUrl: string = environment.apiUrl;\r\n  private userSubject: BehaviorSubject<Usuario>;\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) {\r\n    const user: Usuario = JSON.parse(localStorage.getItem(this.userStorageKey));\r\n    this.userSubject = new BehaviorSubject(user);\r\n  }\r\n\r\n  public isLogged(): boolean {\r\n    return localStorage.getItem(this.userStorageKey) !== null;\r\n  }\r\n\r\n  public getUser(): Usuario {\r\n    return this.userSubject.value;\r\n  }\r\n\r\n  public getAuthToken(): string {\r\n    return localStorage.getItem(this.tokenStorageKey);\r\n  }\r\n\r\n  public authenticate(email: string, password: string) {\r\n    type AuthResult = { user: Usuario, access_token: string };\r\n    const url = `${this.apiUrl}/auth/login`;\r\n    const data = { email, password };\r\n    return this.http.post<AuthResult>(url, data)\r\n      .pipe(\r\n        map(res => {\r\n          localStorage.setItem(this.tokenStorageKey, res.access_token);\r\n          localStorage.setItem(this.userStorageKey, JSON.stringify(res.user));\r\n          this.userSubject.next(res.user);\r\n          return res.user;\r\n        })\r\n      );\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n   //apiUrl: 'http://b2bapidashboard.ddns.net:8888/api'\n  apiUrl: 'http://167.71.102.237:8888/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n// if (environment.production) {\n//   enableProdMode();\n// }\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}