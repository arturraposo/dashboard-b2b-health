{"version":3,"sources":["webpack:///src/app/pages/empresa/empresa-form/empresa-form.component.html","webpack:///src/app/pages/empresa/empresa-usuarios/empresa-usuarios.component.html","webpack:///src/app/pages/empresa/empresa-usuarios/usuario-form/usuario-form.component.html","webpack:///src/app/pages/empresa/empresa.component.html","webpack:///src/app/helpers/validators.helper.ts","webpack:///src/app/models/usuario.ts","webpack:///src/app/pages/empresa/empresa-form/empresa-form.component.scss","webpack:///src/app/pages/empresa/empresa-form/empresa-form.component.ts","webpack:///src/app/pages/empresa/empresa-routing.module.ts","webpack:///src/app/pages/empresa/empresa-usuarios/empresa-usuarios.component.scss","webpack:///src/app/pages/empresa/empresa-usuarios/empresa-usuarios.component.ts","webpack:///src/app/pages/empresa/empresa-usuarios/usuario-form/usuario-form.component.scss","webpack:///src/app/pages/empresa/empresa-usuarios/usuario-form/usuario-form.component.ts","webpack:///src/app/pages/empresa/empresa.component.scss","webpack:///src/app/pages/empresa/empresa.component.ts","webpack:///src/app/pages/empresa/empresa.module.ts","webpack:///src/app/pages/empresa/pipes/user-type.pipe.ts","webpack:///src/app/services/usuario.service.ts"],"names":["cnpjValidator","validateCNPJ","cnpj","replace","v1","v2","aux","i","length","p1","p2","Number","control","value","UsuarioTipo","EmpresaFormComponent","alertHelper","authService","empresaService","router","empresaPai","required","nomeEmpresa","nomeFantasia","fone","endereco","email","site","logo","isInvalid","loading","loadingLogo","unsubscribe$","auth","getUser","empresas$","list","pipe","c","filter","e","id","empresa","changes","setValue","nome_empresa","nome_fantasia","imageUrl","toString","tipo","admin","empresa_pai","clearValidators","updateValueAndValidity","next","complete","event","file","target","files","type","startsWith","reader","FileReader","onload","updateLogo","result","onerror","toast","readAsDataURL","errors","undefined","updateEmpresa","createEmpresa","create","subscribe","navigateByUrl","error","update","selector","template","routes","path","component","EmpresaRoutingModule","imports","forChild","exports","EmpresaUsuariosComponent","modalService","usuarioService","usuario","bsModalRef","show","initialState","empresaId","content","onClose","index","usuarios","findIndex","u","unshift","nome","showCancelButton","then","confirmed","UsuarioFormComponent","nasc","genero","password","userTypes","invalid","empresa_id","updateUsuario","createUsuario","hide","getMessage","confirmButtonText","EmpresaComponent","activatedRoute","snapshot","paramMap","get","loadEmpresa","findById","EmpresaModule","declarations","UserTypePipe","find","text","name","UsuarioService","http","apiUrl","post","put","providedIn"],"mappings":"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","file":"pages-empresa-empresa-module-es5.js","sourcesContent":["export default \"<form (ngSubmit)=\\\"submit()\\\">\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <div class=\\\"col-md-12 d-flex flex-column justify-content-center align-items-center mb-5\\\">\\r\\n      <div class=\\\"profile-img-edit\\\" [class.is-invalid]=\\\"isInvalid && logo.invalid\\\">\\r\\n        <app-loading [backdrop]=\\\"true\\\" [show]=\\\"loadingLogo\\\"></app-loading>\\r\\n        <div class=\\\"no-pic\\\" *ngIf=\\\"!imageUrl\\\">\\r\\n          <i class=\\\"ri-image-line\\\"></i> Logo da Empresa\\r\\n        </div>\\r\\n        <img\\r\\n          class=\\\"profile-pic\\\"\\r\\n          [src]=\\\"imageUrl\\\"\\r\\n          accept=\\\"image/*\\\"\\r\\n          *ngIf=\\\"imageUrl\\\"\\r\\n        />\\r\\n        <div class=\\\"p-image\\\" (click)=\\\"logoInput.click()\\\">\\r\\n          <i class=\\\"ri-pencil-line upload-button\\\"></i>\\r\\n          <input class=\\\"file-upload\\\" type=\\\"file\\\" accept=\\\"image/*\\\" (change)=\\\"logoChanged($event)\\\" #logoInput>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"invalid-feedback text-center\\\" *ngIf=\\\"isInvalid && logo.errors?.required\\\">\\r\\n        Logo da empresa é obrigatório.\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"form-group col-sm-6\\\">\\r\\n      <label for=\\\"nome_empresa\\\">Nome da Empresa *</label>\\r\\n      <input\\r\\n        type=\\\"text\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        [class.is-invalid]=\\\"isInvalid && nomeEmpresa.invalid\\\"\\r\\n        id=\\\"nome_empresa\\\"\\r\\n        [formControl]=\\\"nomeEmpresa\\\" />\\r\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isInvalid && nomeEmpresa.errors?.required\\\">\\r\\n          Nome da empresa é obrigatório.\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group col-sm-6\\\">\\r\\n      <label for=\\\"nome_fantasia\\\">Nome Fantasia *</label>\\r\\n      <input\\r\\n        type=\\\"text\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        [class.is-invalid]=\\\"isInvalid && nomeFantasia.invalid\\\"\\r\\n        id=\\\"nome_fantasia\\\"\\r\\n        [formControl]=\\\"nomeFantasia\\\" />\\r\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isInvalid && nomeFantasia.errors?.required\\\">\\r\\n          Nome fantasia é obrigatório.\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group col-sm-6\\\">\\r\\n      <label for=\\\"cnpj\\\">CNPJ *</label>\\r\\n      <input\\r\\n        type=\\\"text\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        [class.is-invalid]=\\\"isInvalid && cnpj.invalid\\\"\\r\\n        id=\\\"cnpj\\\"\\r\\n        [formControl]=\\\"cnpj\\\"\\r\\n        mask=\\\"00.000.000/0000-00\\\" />\\r\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isInvalid && cnpj.errors?.required\\\">\\r\\n          CNPJ é obrigatório.\\r\\n        </div>\\r\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isInvalid && cnpj.errors?.cnpj\\\">\\r\\n          CNPJ inválido.\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group col-sm-6\\\">\\r\\n      <label for=\\\"fone\\\">Telefone *</label>\\r\\n      <input\\r\\n        type=\\\"text\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        [class.is-invalid]=\\\"isInvalid && fone.invalid\\\"\\r\\n        id=\\\"fone\\\"\\r\\n        [formControl]=\\\"fone\\\"\\r\\n        mask=\\\"(00) 0000-0000||(00) 00000-0000\\\" />\\r\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isInvalid && fone.errors?.required\\\">\\r\\n          Telefone é obrigatório.\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group col-sm-6\\\">\\r\\n      <label for=\\\"email\\\">E-mail *</label>\\r\\n      <input\\r\\n        type=\\\"text\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        [class.is-invalid]=\\\"isInvalid && email.invalid\\\"\\r\\n        id=\\\"email\\\"\\r\\n        [formControl]=\\\"email\\\" />\\r\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isInvalid && email.errors?.required\\\">\\r\\n          E-mail é obrigatório.\\r\\n        </div>\\r\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isInvalid && email.errors?.email\\\">\\r\\n          E-mail inválido.\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group col-sm-6\\\">\\r\\n      <label for=\\\"site\\\">Site *</label>\\r\\n      <input\\r\\n        type=\\\"text\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        [class.is-invalid]=\\\"isInvalid && site.invalid\\\"\\r\\n        id=\\\"site\\\"\\r\\n        [formControl]=\\\"site\\\" />\\r\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isInvalid && site.errors?.required\\\">\\r\\n          Site é obrigatório.\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group col-sm-12\\\">\\r\\n      <label for=\\\"endereco\\\">Endereço *</label>\\r\\n      <textarea\\r\\n        class=\\\"form-control\\\"\\r\\n        [class.is-invalid]=\\\"isInvalid && endereco.invalid\\\"\\r\\n        name=\\\"address\\\"\\r\\n        rows=\\\"3\\\"\\r\\n        id=\\\"endereco\\\"\\r\\n        [formControl]=\\\"endereco\\\">\\r\\n      </textarea>\\r\\n      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isInvalid && endereco.errors?.required\\\">\\r\\n        Endereço é obrigatório.\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"auth.tipo == 1\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h4 class=\\\"mt-3\\\">Admin</h4>\\r\\n      <hr class=\\\"mt-1 mb-4\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"form-group col-sm-6\\\">\\r\\n      <label for=\\\"empresa_pai\\\">Empresa Pai*</label>\\r\\n      <ng-select [formControl]=\\\"empresaPai\\\" [class.is-invalid]=\\\"isInvalid && empresaPai.invalid\\\">\\r\\n        <ng-option [value]=\\\"empresa.id\\\" *ngFor=\\\"let empresa of empresas$ | async\\\">\\r\\n          <h6 class=\\\"m-0\\\">{{ empresa.nome_empresa }}<small class=\\\"text-muted ml-2\\\">{{ empresa.cnpj }}</small></h6>\\r\\n        </ng-option>\\r\\n      </ng-select>\\r\\n      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isInvalid && empresaPai.errors?.required\\\">\\r\\n        Empresa pai é obrigatório.\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"d-flex justify-content-end mt-5\\\">\\r\\n    <app-button type=\\\"submit\\\" class=\\\"mr-2\\\" [loading]=\\\"loading\\\">Salvar</app-button>\\r\\n    <app-button type=\\\"reset\\\" color=\\\"light\\\" routerLink=\\\"/empresas\\\">Voltar</app-button>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<app-card [loading]=\\\"loading\\\">\\r\\n  <div class=\\\"d-flex justify-content-between align-items-center\\\" header>\\r\\n    <h4>Usuários</h4>\\r\\n    <div>\\r\\n      <app-button rounded=\\\"pill\\\" (click)=\\\"openUsuarioForm()\\\">\\r\\n        <i class=\\\"ri-add-line mr-1\\\"></i>\\r\\n        Novo Usuário\\r\\n      </app-button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div body>\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n      <table class=\\\"table table-striped table-borderless\\\">\\r\\n          <thead>\\r\\n              <tr>\\r\\n                  <th scope=\\\"col\\\">Nome</th>\\r\\n                  <th scope=\\\"col\\\">E-mail</th>\\r\\n                  <th scope=\\\"col\\\" class=\\\"text-center\\\">Gênero</th>\\r\\n                  <th scope=\\\"col\\\" class=\\\"text-center\\\">Data de nascimento</th>\\r\\n                  <th scope=\\\"col\\\" class=\\\"text-center\\\">Tipo</th>\\r\\n                  <th scope=\\\"col\\\"></th>\\r\\n              </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n              <tr *ngFor=\\\"let usuario of usuarios\\\">\\r\\n                  <td class=\\\"align-middle\\\">{{ usuario.nome }}</td>\\r\\n                  <td class=\\\"align-middle\\\">{{ usuario.email }}</td>\\r\\n                  <td class=\\\"align-middle text-center\\\">{{ usuario.genero }}</td>\\r\\n                  <td class=\\\"align-middle text-center\\\">{{ usuario.nasc | date:'dd/MM/yyyy' }}</td>\\r\\n                  <td class=\\\"align-middle text-center\\\">{{ usuario.tipo | userType }}</td>\\r\\n                  <td class=\\\"align-middle\\\">\\r\\n                    <div class=\\\"d-flex align-items-center justify-content-end\\\">\\r\\n                      <app-button\\r\\n                        class=\\\"mx-1\\\"\\r\\n                        color=\\\"primary\\\"\\r\\n                        size=\\\"small\\\"\\r\\n                        rounded=\\\"circle\\\"\\r\\n                        (click)=\\\"openUsuarioForm(usuario)\\\">\\r\\n                        <i class=\\\"ri-edit-box-line\\\"></i>\\r\\n                      </app-button>\\r\\n\\r\\n                      <app-button\\r\\n                        class=\\\"mx-1\\\"\\r\\n                        color=\\\"primary\\\"\\r\\n                        size=\\\"small\\\"\\r\\n                        rounded=\\\"circle\\\"\\r\\n                        (click)=\\\"destroy(usuario)\\\">\\r\\n                        <i class=\\\"ri-delete-bin-line\\\"></i>\\r\\n                      </app-button>\\r\\n                    </div>\\r\\n                  </td>\\r\\n              </tr>\\r\\n              <tr *ngIf=\\\"!usuarios || usuarios?.length == 0\\\">\\r\\n                <td colspan=\\\"6\\\" class=\\\"text-center\\\">Nenhum usuário encontrado</td>\\r\\n              </tr>\\r\\n          </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-card>\\r\\n\\r\\n\";","export default \"<div class=\\\"modal-header\\\">\\r\\n  <h4 class=\\\"modal-title pull-left\\\">Usuário</h4>\\r\\n  <button type=\\\"button\\\" class=\\\"btn-close close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"bsModalRef?.hide()\\\">\\r\\n    <span aria-hidden=\\\"true\\\" class=\\\"visually-hidden\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <form id=\\\"userForm\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"tipo\\\">Tipo *</label>\\r\\n      <select id=\\\"tipo\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        [class.is-invalid]=\\\"isInvalid && tipo.invalid\\\"\\r\\n        [formControl]=\\\"tipo\\\">\\r\\n        <option value disabled>Selecione o Tipo</option>\\r\\n        <option [value]=\\\"type.id\\\" *ngFor=\\\"let type of userTypes\\\">{{ type.text }}</option>\\r\\n      </select>\\r\\n      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isInvalid && tipo.errors?.required\\\">\\r\\n        Tipo é obrigatório.\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"nome\\\">Nome *</label>\\r\\n      <input\\r\\n        type=\\\"text\\\"\\r\\n        id=\\\"nome\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        [class.is-invalid]=\\\"isInvalid && nome.invalid\\\"\\r\\n        [formControl]=\\\"nome\\\" />\\r\\n      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isInvalid && nome.errors?.required\\\">\\r\\n        Nome é obrigatório.\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"nasc\\\">Data de Nascimento *</label>\\r\\n      <input\\r\\n        type=\\\"date\\\"\\r\\n        id=\\\"nasc\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        [class.is-invalid]=\\\"isInvalid && nasc.invalid\\\"\\r\\n        [formControl]=\\\"nasc\\\" />\\r\\n      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isInvalid && nasc.errors?.required\\\">\\r\\n        Data de nascimento é obrigatório.\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"genero\\\">Gênero *</label>\\r\\n      <select id=\\\"genero\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        [class.is-invalid]=\\\"isInvalid && genero.invalid\\\"\\r\\n        [formControl]=\\\"genero\\\">\\r\\n        <option value disabled>Selecione o Gênero</option>\\r\\n        <option value=\\\"M\\\">Masculino</option>\\r\\n        <option value=\\\"F\\\">Feminino</option>\\r\\n      </select>\\r\\n      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isInvalid && genero.errors?.required\\\">\\r\\n        Gênero é obrigatório.\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"email\\\">E-mail *</label>\\r\\n      <input\\r\\n        type=\\\"email\\\"\\r\\n        id=\\\"email\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        [class.is-invalid]=\\\"isInvalid && email.invalid\\\"\\r\\n        [formControl]=\\\"email\\\" />\\r\\n      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isInvalid && email.errors?.required\\\">\\r\\n        E-mail é obrigatório.\\r\\n      </div>\\r\\n      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isInvalid && email.errors?.email\\\">\\r\\n        E-mail inválido.\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"email\\\">Senha *</label>\\r\\n      <input\\r\\n        type=\\\"password\\\"\\r\\n        id=\\\"senha\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        [class.is-invalid]=\\\"isInvalid && password.invalid\\\"\\r\\n        [formControl]=\\\"password\\\" />\\r\\n      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isInvalid && password.errors?.required\\\">\\r\\n        Senha é obrigatório.\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <app-button color=\\\"light\\\">Cancelar</app-button>\\r\\n  <app-button [form]=\\\"'userForm'\\\" [loading]=\\\"loading\\\">Salvar</app-button>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <app-card bodyClass=\\\"p-0\\\" [header]=\\\"false\\\">\\r\\n      <div class=\\\"iq-edit-list\\\" body>\\r\\n        <ul class=\\\"iq-edit-profile d-flex nav nav-pills\\\">\\r\\n          <li class=\\\"col-md-6 p-0\\\">\\r\\n            <a class=\\\"nav-link active\\\" data-toggle=\\\"pill\\\" href=\\\"#personal-information\\\">\\r\\n              Informações da Empresa\\r\\n            </a>\\r\\n          </li>\\r\\n          <li class=\\\"col-md-6 p-0\\\">\\r\\n            <a class=\\\"nav-link\\\" data-toggle=\\\"pill\\\" href=\\\"#chang-pwd\\\">\\r\\n              Usuários\\r\\n            </a>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </app-card>\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <div class=\\\"iq-edit-list-data\\\">\\r\\n      <div class=\\\"tab-content\\\">\\r\\n        <div class=\\\"tab-pane fade active show\\\" id=\\\"personal-information\\\" role=\\\"tabpanel\\\">\\r\\n          <app-card [loading]=\\\"loading\\\">\\r\\n            <div header>\\r\\n              <h4>Informações da Empresa</h4>\\r\\n            </div>\\r\\n            <div body>\\r\\n              <empresa-form [empresa]=\\\"empresa\\\"></empresa-form>\\r\\n            </div>\\r\\n          </app-card>\\r\\n        </div>\\r\\n        <div class=\\\"tab-pane fade\\\" id=\\\"chang-pwd\\\" role=\\\"tabpanel\\\">\\r\\n          <empresa-usuarios [empresaId]=\\\"empresa?.id\\\" [usuarios]=\\\"empresa?.usuarios\\\"></empresa-usuarios>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\r\n\r\nexport function cnpjValidator(): ValidatorFn {\r\n  const validateCNPJ = (cnpj: string) => {\r\n    cnpj = cnpj.replace(/[^0-9]/g, \"\");\r\n\r\n    let v1 = 0;\r\n    let v2 = 0;\r\n    let aux = false;\r\n\r\n    for (let i = 1; cnpj.length > i; i++) {\r\n      if (cnpj[i - 1] != cnpj[i]) {\r\n        aux = true;\r\n      }\r\n    }\r\n\r\n    if (aux == false) {\r\n      return false;\r\n    }\r\n\r\n    for (let i = 0, p1 = 5, p2 = 13; cnpj.length - 2 > i; i++, p1--, p2--) {\r\n      if (p1 >= 2) {\r\n        v1 += Number(cnpj[i]) * p1;\r\n      } else {\r\n        v1 += Number(cnpj[i]) * p2;\r\n      }\r\n    }\r\n\r\n    v1 = v1 % 11;\r\n    if (v1 < 2) {\r\n      v1 = 0;\r\n    } else {\r\n      v1 = 11 - v1;\r\n    }\r\n\r\n    if (v1 != Number(cnpj[12])) {\r\n      return false;\r\n    }\r\n\r\n    for (let i = 0, p1 = 6, p2 = 14; cnpj.length - 1 > i; i++, p1--, p2--) {\r\n      if (p1 >= 2) {\r\n        v2 += Number(cnpj[i]) * p1;\r\n      } else {\r\n        v2 += Number(cnpj[i]) * p2;\r\n      }\r\n    }\r\n\r\n    v2 = v2 % 11;\r\n\r\n    if (v2 < 2) {\r\n      v2 = 0;\r\n    } else {\r\n      v2 = 11 - v2;\r\n    }\r\n\r\n    if (v2 != Number(cnpj[13])) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    if (!control.value || validateCNPJ(control.value)) return null;\r\n    return { cnpj: true };\r\n  };\r\n}\r\n","import { Empresa } from './empresa';\r\n\r\nexport interface Usuario {\r\n  id: number;\r\n  empresa_id: number;\r\n  nome: string;\r\n  email: string;\r\n  genero: string;\r\n  nasc: string;\r\n  tipo: UsuarioTipo;\r\n  password?: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n  empresa: Empresa;\r\n}\r\n\r\nexport enum UsuarioTipo {\r\n  admin = 1,\r\n  director = 2,\r\n  coordinator = 3,\r\n  employee = 4,\r\n}\r\n","export default \".profile-img-edit {\\n  background: #e9edf4;\\n  border-radius: 0.25rem;\\n}\\n.profile-img-edit.is-invalid {\\n  border: 1px solid var(--red);\\n}\\n.profile-img-edit .p-image {\\n  right: -15px;\\n  z-index: 10;\\n}\\n.profile-img-edit .profile-pic {\\n  border-radius: 0.25rem;\\n}\\n.profile-img-edit .no-pic {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  flex-direction: column;\\n  font-size: 12px;\\n  line-height: 22px;\\n  height: 100%;\\n}\\n.profile-img-edit .no-pic i {\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvZW1wcmVzYS9lbXByZXNhLWZvcm0vQzpcXFVzZXJzXFx1c2VyXFxEb2N1bWVudHNcXEIyQiBIZWFsdGhcXGRhc2hib2FyZC1iMmItaGVhbHRoL3NyY1xcYXBwXFxwYWdlc1xcZW1wcmVzYVxcZW1wcmVzYS1mb3JtXFxlbXByZXNhLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2VtcHJlc2EvZW1wcmVzYS1mb3JtL2VtcHJlc2EtZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG1CQUFBO0VBQ0Esc0JBQUE7QUNDSjtBRENJO0VBQ0ksNEJBQUE7QUNDUjtBREVJO0VBQ0UsWUFBQTtFQUNBLFdBQUE7QUNBTjtBREdJO0VBQ0Usc0JBQUE7QUNETjtBRElJO0VBQ0ksYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxzQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtFQUNBLFlBQUE7QUNGUjtBRElRO0VBQ0ksZUFBQTtBQ0ZaIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvZW1wcmVzYS9lbXByZXNhLWZvcm0vZW1wcmVzYS1mb3JtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnByb2ZpbGUtaW1nLWVkaXQge1xyXG4gICAgYmFja2dyb3VuZDogI2U5ZWRmNDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDAuMjVyZW07XHJcblxyXG4gICAgJi5pcy1pbnZhbGlkIHtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1yZWQpO1xyXG4gICAgfVxyXG5cclxuICAgIC5wLWltYWdlIHtcclxuICAgICAgcmlnaHQ6IC0xNXB4O1xyXG4gICAgICB6LWluZGV4OiAxMDtcclxuICAgIH1cclxuXHJcbiAgICAucHJvZmlsZS1waWMge1xyXG4gICAgICBib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xyXG4gICAgfVxyXG5cclxuICAgIC5uby1waWMge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMjJweDtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcblxyXG4gICAgICAgIGkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiLnByb2ZpbGUtaW1nLWVkaXQge1xuICBiYWNrZ3JvdW5kOiAjZTllZGY0O1xuICBib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xufVxuLnByb2ZpbGUtaW1nLWVkaXQuaXMtaW52YWxpZCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLXJlZCk7XG59XG4ucHJvZmlsZS1pbWctZWRpdCAucC1pbWFnZSB7XG4gIHJpZ2h0OiAtMTVweDtcbiAgei1pbmRleDogMTA7XG59XG4ucHJvZmlsZS1pbWctZWRpdCAucHJvZmlsZS1waWMge1xuICBib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xufVxuLnByb2ZpbGUtaW1nLWVkaXQgLm5vLXBpYyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBmb250LXNpemU6IDEycHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBoZWlnaHQ6IDEwMCU7XG59XG4ucHJvZmlsZS1pbWctZWRpdCAubm8tcGljIGkge1xuICBmb250LXNpemU6IDE2cHg7XG59Il19 */\";","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map, takeUntil } from 'rxjs/operators';\r\nimport { Empresa } from 'src/app/models/empresa';\r\nimport { Usuario, UsuarioTipo } from 'src/app/models/usuario';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { EmpresaService } from 'src/app/services/empresa.service';\r\nimport { AlertHelper } from 'src/app/helpers/alert.helper';\r\nimport { cnpjValidator } from 'src/app/helpers/validators.helper';\r\n\r\n@Component({\r\n  selector: 'empresa-form',\r\n  templateUrl: './empresa-form.component.html',\r\n  styleUrls: ['./empresa-form.component.scss']\r\n})\r\nexport class EmpresaFormComponent implements OnInit, OnChanges, OnDestroy {\r\n  public empresaPai = new FormControl('', Validators.required);\r\n  public nomeEmpresa = new FormControl('', Validators.required);\r\n  public nomeFantasia = new FormControl('', Validators.required);\r\n  public cnpj = new FormControl('', [Validators.required, cnpjValidator()]);\r\n  public fone = new FormControl('', Validators.required);\r\n  public endereco = new FormControl('', Validators.required);\r\n  public email = new FormControl('', [Validators.required, Validators.email]);\r\n  public site = new FormControl('', Validators.required);\r\n  public logo = new FormControl('', Validators.required);\r\n  public isInvalid: boolean = false;\r\n  public imageUrl?: string;\r\n  public empresas$: Observable<Empresa[]>;\r\n  public auth: Usuario;\r\n  public loading: boolean = false;\r\n  public loadingLogo: boolean = false;\r\n  private unsubscribe$ = new Subject<void>();\r\n\r\n  @Input() empresa?: Empresa;\r\n\r\n  constructor(\r\n    private alertHelper: AlertHelper,\r\n    private authService: AuthService,\r\n    private empresaService: EmpresaService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  public ngOnInit(): void {\r\n    this.auth = this.authService.getUser();\r\n    this.empresas$ = this.empresaService.list()\r\n      .pipe(\r\n        map(c => c.filter(e => e.id !== this.empresa?.id ))\r\n      );\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges): void {\r\n    if (this.empresa) {\r\n      this.nomeEmpresa.setValue(this.empresa.nome_empresa);\r\n      this.nomeFantasia.setValue(this.empresa.nome_fantasia);\r\n      this.cnpj.setValue(this.empresa.cnpj);\r\n      this.fone.setValue(this.empresa.fone);\r\n      this.endereco.setValue(this.empresa.endereco);\r\n      this.email.setValue(this.empresa.email);\r\n      this.site.setValue(this.empresa.site);\r\n\r\n      this.imageUrl = this.empresa.logo.toString();\r\n\r\n      if (this.auth.tipo == UsuarioTipo.admin) {\r\n        this.empresaPai.setValue(this.empresa.empresa_pai);\r\n      }\r\n\r\n      this.logo.clearValidators();\r\n      this.logo.updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.unsubscribe$.next();\r\n    this.unsubscribe$.complete();\r\n  }\r\n\r\n  public logoChanged(event: Event): void {\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    if (file && file.type.startsWith('image/')) {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        if (this.empresa?.id) {\r\n          this.updateLogo(file);\r\n        } else {\r\n          this.imageUrl = reader.result.toString();\r\n          this.logo.setValue(file);\r\n        }\r\n      };\r\n      reader.onerror = () => {\r\n        this.alertHelper.toast('error', 'Imagem não pode ser carregada. Tente novamente.');\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      this.alertHelper.toast('error', 'A logo da empresa precisa ser uma imagem.');\r\n    }\r\n  }\r\n\r\n  public submit(): void {\r\n    this.isInvalid = this.nomeEmpresa.errors?.required\r\n      || this.nomeFantasia.errors?.required\r\n      || this.cnpj.errors?.required\r\n      || this.cnpj.errors?.cnpj\r\n      || this.fone.errors?.required\r\n      || this.endereco.errors?.required\r\n      || this.email.errors?.required\r\n      || this.email.errors?.email\r\n      || this.site.errors?.required\r\n      || this.logo.errors?.required;\r\n\r\n    if (this.auth.tipo == UsuarioTipo.admin) {\r\n      this.isInvalid = this.isInvalid || this.empresaPai.errors?.required;\r\n    }\r\n\r\n    if (!this.isInvalid) {\r\n      this.empresa = {\r\n        ...this.empresa,\r\n        nome_empresa: this.nomeEmpresa.value,\r\n        nome_fantasia: this.nomeFantasia.value,\r\n        cnpj: this.cnpj.value,\r\n        fone: this.fone.value,\r\n        endereco: this.endereco.value,\r\n        email: this.email.value,\r\n        site: this.site.value,\r\n        logo: this.logo.value,\r\n      };\r\n\r\n      if (this.auth.tipo == UsuarioTipo.admin) {\r\n        this.empresa.empresa_pai = this.empresaPai.value;\r\n      }\r\n\r\n      if (this.empresa?.id) {\r\n        this.empresa.logo = undefined;\r\n        this.updateEmpresa();\r\n      } else {\r\n        this.createEmpresa();\r\n      }\r\n    }\r\n  }\r\n\r\n  private createEmpresa(): void {\r\n    this.loading = true;\r\n    this.empresaService.create(this.empresa)\r\n      .pipe(takeUntil(this.unsubscribe$))\r\n      .subscribe({\r\n        next: () => {\r\n          this.loading = false;\r\n          this.alertHelper.toast('success', 'Empresa cadastrada com sucesso.');\r\n          this.router.navigateByUrl('/empresas');\r\n        },\r\n        error: () => {\r\n          this.loading = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  private updateEmpresa(): void {\r\n    this.loading = true;\r\n    this.empresaService.update(this.empresa)\r\n      .pipe(takeUntil(this.unsubscribe$))\r\n      .subscribe({\r\n        next: () => {\r\n          this.loading = false;\r\n          this.alertHelper.toast('success', 'Empresa atualizada com sucesso.');\r\n        },\r\n        error: () => {\r\n          this.loading = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  private updateLogo(logo: File): void {\r\n    this.loadingLogo = true;\r\n    this.empresaService.updateLogo(this.empresa.id, logo)\r\n      .pipe(takeUntil(this.unsubscribe$))\r\n      .subscribe({\r\n        next: (empresa) => {\r\n          this.loadingLogo = false;\r\n          this.imageUrl = empresa.logo.toString();\r\n          this.alertHelper.toast('success', 'Logo alterada com sucesso.');\r\n        },\r\n        error: () => {\r\n          this.loadingLogo = false;\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EmpresaComponent } from './empresa.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EmpresaComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EmpresaRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2VtcHJlc2EvZW1wcmVzYS11c3Vhcmlvcy9lbXByZXNhLXVzdWFyaW9zLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { Usuario } from 'src/app/models/usuario';\r\nimport { UsuarioFormComponent } from './usuario-form/usuario-form.component';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { UsuarioService } from 'src/app/services/usuario.service';\r\nimport { AlertHelper } from 'src/app/helpers/alert.helper';\r\n\r\n@Component({\r\n  selector: 'empresa-usuarios',\r\n  templateUrl: './empresa-usuarios.component.html',\r\n  styleUrls: ['./empresa-usuarios.component.scss']\r\n})\r\nexport class EmpresaUsuariosComponent implements OnInit, OnDestroy {\r\n  public loading: boolean = false;\r\n  public bsModalRef?: BsModalRef;\r\n  private unsubscribe$ = new Subject<void>();\r\n\r\n  @Input() empresaId: number;\r\n  @Input() usuarios?: Usuario[];\r\n\r\n  constructor(\r\n    private modalService: BsModalService,\r\n    private usuarioService: UsuarioService,\r\n    private alertHelper: AlertHelper\r\n  ) { }\r\n\r\n  public ngOnInit(): void {\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.unsubscribe$.next();\r\n    this.unsubscribe$.complete();\r\n  }\r\n\r\n  public openUsuarioForm(usuario?: Usuario): void {\r\n    this.bsModalRef = this.modalService.show(UsuarioFormComponent, {\r\n      initialState: {\r\n        empresaId: this.empresaId,\r\n        usuario: usuario,\r\n      }\r\n    });\r\n\r\n    const component: UsuarioFormComponent = this.bsModalRef.content;\r\n\r\n    component.onClose\r\n      .pipe(takeUntil(this.unsubscribe$))\r\n      .subscribe({\r\n        next: (usuario) => {\r\n          const index = this.usuarios.findIndex(u => u.id == usuario.id);\r\n          if (index === -1) {\r\n            this.usuarios.unshift(usuario);\r\n          } else {\r\n            this.usuarios[index] = usuario;\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  public destroy(usuario: Usuario): void {\r\n    this.alertHelper.show(\r\n      'warning',\r\n      `Tem certeza que deseja remover o usuário ${usuario.nome}?`,\r\n      { showCancelButton: true }\r\n    )\r\n    .then(confirmed => {\r\n      if (confirmed) {\r\n        this.loading = true;\r\n        this.usuarioService.delete(usuario)\r\n          .pipe(takeUntil(this.unsubscribe$))\r\n          .subscribe({\r\n            next: (usuario) => {\r\n              this.loading = false;\r\n              this.usuarios = this.usuarios.filter(u => u.id != usuario.id);\r\n            },\r\n            error: () => {\r\n              this.loading = false;\r\n            }\r\n          })\r\n      }\r\n    })\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2VtcHJlc2EvZW1wcmVzYS11c3Vhcmlvcy91c3VhcmlvLWZvcm0vdXN1YXJpby1mb3JtLmNvbXBvbmVudC5zY3NzIn0= */\";","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { USER_TYPES, UserType } from 'src/app/data/user-types.data';\r\nimport { AlertHelper } from 'src/app/helpers/alert.helper';\r\nimport { ResponseError } from 'src/app/models/response-error';\r\nimport { Usuario } from 'src/app/models/usuario';\r\nimport { UsuarioService } from 'src/app/services/usuario.service';\r\n\r\n@Component({\r\n  selector: 'usuario-form',\r\n  templateUrl: './usuario-form.component.html',\r\n  styleUrls: ['./usuario-form.component.scss']\r\n})\r\nexport class UsuarioFormComponent implements OnInit, OnDestroy {\r\n  public nome = new FormControl('', [Validators.required]);\r\n  public email = new FormControl('', [Validators.required, Validators.email]);\r\n  public nasc = new FormControl('', [Validators.required]);\r\n  public tipo = new FormControl('', [Validators.required]);\r\n  public genero = new FormControl('', [Validators.required]);\r\n  public password = new FormControl('', [Validators.required]);\r\n  public isInvalid: boolean = false;\r\n  public loading: boolean = false;\r\n  public userTypes: UserType[] = [];\r\n  public onClose = new Subject<Usuario>();\r\n  private unsubscribe$ = new Subject<void>();\r\n\r\n  @Input() empresaId: number;\r\n  @Input() usuario?: Usuario;\r\n\r\n  constructor(\r\n    public bsModalRef: BsModalRef,\r\n    private usuarioService: UsuarioService,\r\n    private alertHelper: AlertHelper\r\n  ) { }\r\n\r\n  public ngOnInit(): void {\r\n    this.userTypes = USER_TYPES.filter(u => u.id != 1);\r\n\r\n    if (this.usuario) {\r\n      this.nome.setValue(this.usuario.nome);\r\n      this.email.setValue(this.usuario.email);\r\n      this.nasc.setValue(this.usuario.nasc);\r\n      this.tipo.setValue(this.usuario.tipo);\r\n      this.genero.setValue(this.usuario.genero);\r\n\r\n      this.password.clearValidators();\r\n      this.password.updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.unsubscribe$.next();\r\n    this.unsubscribe$.complete();\r\n  }\r\n\r\n  public submit(): void {\r\n    this.isInvalid = this.nome.invalid\r\n      || this.email.invalid\r\n      || this.nasc.invalid\r\n      || this.tipo.invalid\r\n      || this.genero.invalid\r\n      || this.password.invalid;\r\n\r\n    if (!this.isInvalid) {\r\n      this.usuario = {\r\n        ...this.usuario,\r\n        empresa_id: this.empresaId,\r\n        nome: this.nome.value,\r\n        email: this.email.value,\r\n        nasc: this.nasc.value,\r\n        tipo: this.tipo.value,\r\n        genero: this.genero.value,\r\n      };\r\n\r\n      if (this.password.value) {\r\n        this.usuario.password = this.password.value;\r\n      }\r\n\r\n      if (this.usuario?.id) {\r\n        this.updateUsuario();\r\n      } else {\r\n        this.createUsuario();\r\n      }\r\n    }\r\n  }\r\n\r\n  private createUsuario(): void {\r\n    this.loading = true;\r\n    this.usuarioService.create(this.usuario)\r\n      .pipe(takeUntil(this.unsubscribe$))\r\n      .subscribe({\r\n        next: (usuario) => {\r\n          this.loading = false;\r\n          this.alertHelper.toast('success', 'Usuário cadastrado com sucesso.');\r\n          this.onClose.next(usuario);\r\n          this.bsModalRef.hide();\r\n        },\r\n        error: (e) => {\r\n          this.loading = false;\r\n          if (e instanceof ResponseError) {\r\n            this.alertHelper.show('error', e.getMessage(), {\r\n              confirmButtonText: 'Entendi'\r\n            });\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  private updateUsuario(): void {\r\n    this.loading = true;\r\n    this.usuarioService.update(this.usuario)\r\n      .pipe(takeUntil(this.unsubscribe$))\r\n      .subscribe({\r\n        next: (usuario) => {\r\n          this.loading = false;\r\n          this.alertHelper.toast('success', 'Usuário atualizado com sucesso.');\r\n          this.onClose.next(usuario);\r\n          this.bsModalRef.hide();\r\n        },\r\n        error: () => {\r\n          this.loading = false;\r\n        }\r\n      });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2VtcHJlc2EvZW1wcmVzYS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { Empresa } from 'src/app/models/empresa';\r\nimport { EmpresaService } from 'src/app/services/empresa.service';\r\n\r\n@Component({\r\n  selector: 'app-empresa',\r\n  templateUrl: './empresa.component.html',\r\n  styleUrls: ['./empresa.component.scss']\r\n})\r\nexport class EmpresaComponent implements OnInit, OnDestroy {\r\n  public loading: boolean = false;\r\n  public empresa?: Empresa;\r\n  public bsModalRef?: BsModalRef;\r\n  private unsubscribe$ = new Subject<void>();\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private empresaService: EmpresaService,\r\n  ) { }\r\n\r\n  public ngOnInit(): void {\r\n    const id = this.activatedRoute.snapshot.paramMap.get('id');\r\n    if (id !== null) {\r\n      this.loadEmpresa(Number(id));\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.unsubscribe$.next();\r\n    this.unsubscribe$.complete();\r\n  }\r\n\r\n  private loadEmpresa(id: number): void {\r\n    this.loading = true;\r\n    this.empresaService.findById(id)\r\n      .pipe(takeUntil(this.unsubscribe$))\r\n      .subscribe({\r\n        next: (empresa) => {\r\n          this.loading = false;\r\n          this.empresa = empresa;\r\n        },\r\n        error: () => {\r\n          this.loading = false;\r\n        },\r\n      });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EmpresaRoutingModule } from './empresa-routing.module';\r\nimport { EmpresaComponent } from './empresa.component';\r\nimport { EmpresaFormComponent } from './empresa-form/empresa-form.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgxMaskModule } from 'ngx-mask';\r\nimport { EmpresaUsuariosComponent } from './empresa-usuarios/empresa-usuarios.component';\r\nimport { UsuarioFormComponent } from './empresa-usuarios/usuario-form/usuario-form.component';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { UserTypePipe } from './pipes/user-type.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EmpresaComponent,\r\n    EmpresaFormComponent,\r\n    EmpresaUsuariosComponent,\r\n    UsuarioFormComponent,\r\n    UserTypePipe\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    EmpresaRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxMaskModule,\r\n    ModalModule.forChild(),\r\n    NgSelectModule,\r\n    ComponentsModule\r\n  ],\r\n})\r\nexport class EmpresaModule { }\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { USER_TYPES } from 'src/app/data/user-types.data';\r\n\r\n@Pipe({ name: 'userType' })\r\nexport class UserTypePipe implements PipeTransform {\r\n  transform(value: number): string {\r\n    let type = USER_TYPES.find(u => u.id == value);\r\n    return type != undefined\r\n      ? type.text\r\n      : '';\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Usuario } from '../models/usuario';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsuarioService {\r\n  private apiUrl: string = environment.apiUrl;\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  public create(usuario: Usuario): Observable<Usuario> {\r\n    return this.http.post<Usuario>(`${this.apiUrl}/usuarios`, usuario);\r\n  }\r\n\r\n  public update(usuario: Usuario): Observable<Usuario> {\r\n    return this.http.put<Usuario>(`${this.apiUrl}/usuarios/${usuario.id}`, usuario);\r\n  }\r\n\r\n  public delete(usuario: Usuario): Observable<Usuario> {\r\n    return this.http.delete<Usuario>(`${this.apiUrl}/usuarios/${usuario.id}`);\r\n  }\r\n}\r\n"]}