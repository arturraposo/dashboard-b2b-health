{"version":3,"sources":["./src/app/pages/login/login.component.html","./src/app/pages/login/login-routing.module.ts","./src/app/pages/login/login.component.scss","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.module.ts"],"names":[],"mappings":"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","file":"pages-login-login-module-es2015.js","sourcesContent":["export default \"<div class=\\\"sign-in-from\\\">\\n  <h1 class=\\\"mb-0\\\">Login</h1>\\n  <p>Entre com seu endereço de e-mail e senha para acessar o painel administrativo.</p>\\n  <form class=\\\"mt-4\\\" [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"login()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">E-mail</label>\\n      <input type=\\\"email\\\" class=\\\"form-control mb-0\\\" id=\\\"email\\\" placeholder=\\\"Email\\\" maxlength=\\\"255\\\"\\n        formControlName=\\\"email\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Senha</label>\\n      <input type=\\\"password\\\" class=\\\"form-control mb-0\\\" id=\\\"password\\\" placeholder=\\\"Senha\\\" maxlength=\\\"255\\\"\\n        formControlName=\\\"password\\\">\\n    </div>\\n    <div class=\\\"d-inline-block w-100\\\">\\n      <span class=\\\"d-inline-block mt-1\\\">\\n        <a href=\\\"javascript:void(0);\\\" class=\\\"float-right\\\">Esqueceu sua senha?</a>\\n      </span>\\n      <app-button\\n        type=\\\"submit\\\"\\n        class=\\\"float-right\\\"\\n        [loading]=\\\"loading\\\">\\n        Entrar\\n      </app-button>\\n    </div>\\n  </form>\\n</div>\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { AlertHelper } from 'src/app/helpers/alert.helper';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  public formGroup: FormGroup;\r\n  public loading: boolean = false;\r\n  private unsubscribe$: Subject<void> = new Subject();\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private alertHelper: AlertHelper,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  public ngOnInit(): void {\r\n    this.formGroup = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.unsubscribe$.next();\r\n    this.unsubscribe$.complete();\r\n  }\r\n\r\n  public login(): void {\r\n    const emailControl = this.formGroup.get('email');\r\n    const passwdControl = this.formGroup.get('password');\r\n\r\n    if (!emailControl.value || !passwdControl.value) {\r\n      this.alertHelper.toast('error', 'E-mail e senha são obrigatórios');\r\n    }\r\n    else if (emailControl.value && emailControl.status === 'INVALID') {\r\n      this.alertHelper.toast('error', 'Informe um e-mail válido');\r\n    }\r\n    else {\r\n      this.loading = true;\r\n      this.authService.authenticate(emailControl.value, passwdControl.value)\r\n        .pipe(takeUntil(this.unsubscribe$))\r\n        .subscribe({\r\n          next: () => {\r\n            this.loading = false;\r\n            this.router.navigate(['/dashboard']); \r\n          },\r\n          error: () => {\r\n            this.loading = false;\r\n            this.alertHelper.toast('error', 'E-mail e/ou senha inválidos');\r\n          }\r\n        });\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LoginRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ComponentsModule\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n"],"sourceRoot":"webpack:///"}